---
name: "App Tests"

on: # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - main

  merge_group:
    types: [checks_requested]

jobs:
  seclint:
    name: "Security Checks & Linters"
    runs-on: "ubuntu-latest"
    env:
      BUNDLE_PATH: "vendor/bundle"
    steps:
      - uses: "actions/checkout@v4"

      - uses: "ruby/setup-ruby@v1"
        with:
          bundler-cache: true

      - name: "Zeitwork Check"
        run: "bundle exec rake app:zeitwerk:check"

      - name: "Bundler Audit"
        run: "bundle exec bundle-audit --update"

      - name: "Brakeman"
        run: "bundle exec brakeman --quiet"

      - name: "StandardRB Check"
        run: "bundle exec standardrb"

      - name: "ERB Check"
        run: "bundle exec erblint app/views --lint-all"

      - name: "Danger"
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}
        run: "bundle exec danger"

  specs:
    name: "App Specs"
    runs-on: "ubuntu-latest"
    permissions:
      contents: read
      pull-requests: write
    env:
      BUNDLE_PATH: "vendor/bundle"
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: "actions/checkout@v4"

      - name: "Update VERSION"
        env:
          VERSION: ${{ github.event.pull_request.head.sha }}
        run: |
          echo "${VERSION}" >> VERSION

      - name: "Set timezone"
        run: |
          sudo timedatectl set-timezone Europe/London

      - name: "Setup Ruby"
        uses: "ruby/setup-ruby@v1"
        with:
          bundler-cache: true

      - name: "Run tests"
        env:
          DATABASE_URL: "postgres://postgres:password@localhost:5432/test"
          REDIS_URL: "redis://localhost:6379/0"
          RAILS_ENV: "test"
          PG_USER: "postgres"
          CAPYBARA_ARTIFACTS: "../tmp/capybara"
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          bundle exec rake db:schema:load
          bundle exec rspec -f j -o tmp/rspec_results.json -f p

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/spec/tmp/capybara
          if-no-files-found: ignore

      - name: RSpec Report
        uses: SonicGarden/rspec-report-action@v5
        with:
          json-path: tmp/rspec_results.json
        if: always()

      - name: Test Coverage
        uses: joshmfrankel/simplecov-check-action@main
        with:
          github_token: ${{ secrets.DANGER_GITHUB_API_TOKEN }}
          minimum_suite_coverage: 70
          check_job_name: "Test Coverage"
        if: always()
